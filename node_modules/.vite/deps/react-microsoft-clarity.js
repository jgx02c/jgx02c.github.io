import {
  __commonJS
} from "./chunk-UXIASGQL.js";

// node_modules/react-microsoft-clarity/src/react-clarity.js
var require_react_clarity = __commonJS({
  "node_modules/react-microsoft-clarity/src/react-clarity.js"(exports, module) {
    module.exports = function(id) {
      (function(c, l, a, r, i, t, y) {
        c[a] = c[a] || function() {
          (c[a].q = c[a].q || []).push(arguments);
        };
        t = l.createElement(r);
        t.async = 1;
        t.src = "https://www.clarity.ms/tag/" + i;
        y = l.getElementsByTagName(r)[0];
        y.parentNode.insertBefore(t, y);
      })(window, document, "clarity", "script", id);
    };
  }
});

// node_modules/react-microsoft-clarity/index.js
var require_react_microsoft_clarity = __commonJS({
  "node_modules/react-microsoft-clarity/index.js"(exports, module) {
    var clarityInit = require_react_clarity();
    function clarity() {
      var params = Array.prototype.slice.call(arguments);
      if (!window.clarity) {
        throw new Error("Clarity is not initialized");
      }
      window.clarity.apply(void 0, params);
    }
    function init(id) {
      clarityInit(id);
    }
    function hasStarted() {
      return typeof window.clarity === "function";
    }
    function identify(userId, properties) {
      clarity("identify", userId, properties);
    }
    function consent(value = true) {
      clarity("consent", value);
    }
    function stop() {
      clarity("stop");
    }
    function start() {
      clarity("start");
    }
    function setTag(key, value) {
      clarity("set", key, value);
    }
    function setEvent(name) {
      clarity("event", name);
    }
    function upgrade(reason) {
      clarity("upgrade", reason);
    }
    module.exports = {
      clarity: {
        init,
        hasStarted,
        identify,
        consent,
        stop,
        start,
        setTag,
        setEvent,
        upgrade
      }
    };
  }
});
export default require_react_microsoft_clarity();
//# sourceMappingURL=react-microsoft-clarity.js.map
